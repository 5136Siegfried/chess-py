name: "Am√©lioration de l'Infrastructure - Modularisation Terraform"
description: "S√©parer les fichiers Terraform en modules autonomes pour am√©liorer la gestion et le d√©ploiement."
title: "[Infra] Modularisation Terraform - S√©paration des fichiers"
labels: ["infra", "enhancement", "terraform"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        ## üéØ Objectif
        Actuellement, tous les fichiers Terraform sont centralis√©s dans un seul dossier, ce qui entra√Æne des red√©ploiements complets √† chaque modification. Cette issue propose de modulariser l‚Äôinfrastructure en plusieurs dossiers ind√©pendants.

  - type: checkboxes
    id: benefits
    attributes:
      label: "üìå B√©n√©fices attendus"
      options:
        - label: "Permettre un d√©ploiement modulaire (mise √† jour d'un seul module sans impacter l'ensemble de l‚Äôinfra)"
          required: false
        - label: "Am√©liorer la lisibilit√© et la maintenabilit√© du code Terraform"
          required: false
        - label: "S√©parer clairement les IAM et les acc√®s pour une meilleure s√©curit√©"
          required: false
        - label: "Faciliter le debugging et le rollback en cas de probl√®me"
          required: false

  - type: textarea
    id: scope
    attributes:
      label: "üìå P√©rim√®tre"
      description: "Liste des modules √† extraire et organiser"
      placeholder: |
        - Module R√©seau (VPC, Subnets, Gateways‚Ä¶)
        - Module Compute (EC2, Lambda, Containers‚Ä¶)
        - Module IAM (Utilisateurs, r√¥les, policies‚Ä¶)
        - Module Base de Donn√©es
        - Module Stockage (S3, EFS‚Ä¶)
        - Autres modules ?
    validations:
      required: false

  - type: textarea
    id: implementation
    attributes:
      label: "üõ†Ô∏è Proposition de mise en ≈ìuvre"
      description: "D√©crire la structure envisag√©e et les ajustements n√©cessaires"
      placeholder: |
        Exemple :
        - Cr√©er un dossier `modules/` avec des sous-dossiers d√©di√©s (`network`, `compute`, `iam`‚Ä¶)
        - Refactorer les fichiers actuels pour qu'ils utilisent `terraform_remote_state` et `outputs` pour la communication inter-modules
        - Ajouter des workflows CI/CD pour d√©ployer uniquement les modules modifi√©s
    validations:
      required: false

  - type: textarea
    id: risks
    attributes:
      label: "‚ö†Ô∏è Risques potentiels"
      description: "Quels probl√®mes potentiels peuvent √™tre rencontr√©s ?"
      placeholder: |
        - Risque de conflit entre les modules lors du refactoring
        - Besoin d‚Äôune migration progressive pour √©viter un downtime
        - Possibles impacts sur les permissions IAM si mal g√©r√©
    validations:
      required: false

  - type: textarea
    id: dependencies
    attributes:
      label: "üîó D√©pendances"
      description: "Autres tickets ou actions √† pr√©voir avant cette impl√©mentation"
      placeholder: |
        - V√©rification de l'√©tat actuel des ressources Terraform
        - Audit des d√©pendances entre modules
        - Mise en place d‚Äôun environnement de test avant d√©ploiement
    validations:
      required: false

  - type: dropdown
    id: priority
    attributes:
      label: "üöÄ Priorit√©"
      description: "Niveau d'urgence de cette am√©lioration"
      options:
        - "Haute (Critique pour la scalabilit√© et la s√©curit√©)"
        - "Moyenne (Am√©lioration importante mais non bloquante)"
        - "Basse (Am√©lioration souhait√©e mais pas prioritaire)"
    validations:
      required: false

  - type: markdown
    attributes:
      value: "Merci d'avance pour vos retours et suggestions !"
